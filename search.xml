<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java</title>
      <link href="/2022/07/21/Java/"/>
      <url>/2022/07/21/Java/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h1><h2 id="1-注释"><a href="#1-注释" class="headerlink" title="1. 注释"></a>1. 注释</h2><p>​    注释是对代码的解释和说明文字。</p><p>Java中的注释分为三种：</p><ul><li>单行注释：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">&#x2F;&#x2F; 这是单行注释文字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>多行注释：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">&#x2F;*这是多行注释文字这是多行注释文字这是多行注释文字*&#x2F;注意：多行注释不能嵌套使用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>文档注释（暂时用不到）：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">&#x2F;**这是多行注释文字这是多行注释文字这是多行注释文字*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用的技巧"><a href="#使用的技巧" class="headerlink" title="使用的技巧"></a>使用的技巧</h3><p>​    如果我们要对代码进行解释，那么就可以使用注释。</p><p>​    当注释的内容比较少，一行就写完了，可以用单行注释。</p><p>​    如果注释的内容比较多，需要写在多行，那么可以使用多行注释。</p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>​    注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。</p><p>​    所以，不管在注释当中写什么内容，都不会影响代码运行的结果。</p><h2 id="2-关键字"><a href="#2-关键字" class="headerlink" title="2. 关键字"></a>2. 关键字</h2><h3 id="2-1-概念"><a href="#2-1-概念" class="headerlink" title="2.1 概念"></a>2.1 概念</h3><p>​    被Java赋予了特定含义的英文单词。</p><p>​    当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。</p><p>注意：关键字很多，不用刻意去记。</p><table><thead><tr><th><strong>abstract</strong></th><th><strong>assert</strong></th><th><strong>boolean</strong></th><th><strong>break</strong></th><th><strong>byte</strong></th></tr></thead><tbody><tr><td><strong>case</strong></td><td><strong>catch</strong></td><td><strong>char</strong></td><td><strong>class</strong></td><td><strong>const</strong></td></tr><tr><td><strong>continue</strong></td><td><strong>default</strong></td><td><strong>do</strong></td><td><strong>double</strong></td><td><strong>else</strong></td></tr><tr><td><strong>enum</strong></td><td><strong>extends</strong></td><td><strong>final</strong></td><td><strong>finally</strong></td><td><strong>float</strong></td></tr><tr><td><strong>for</strong></td><td><strong>goto</strong></td><td><strong>if</strong></td><td><strong>implements</strong></td><td><strong>import</strong></td></tr><tr><td><strong>instanceof</strong></td><td><strong>int</strong></td><td><strong>interface</strong></td><td><strong>long</strong></td><td><strong>native</strong></td></tr><tr><td><strong>new</strong></td><td><strong>package</strong></td><td><strong>private</strong></td><td><strong>protected</strong></td><td><strong>public</strong></td></tr><tr><td><strong>return</strong></td><td><strong>strictfp</strong></td><td><strong>short</strong></td><td><strong>static</strong></td><td><strong>super</strong></td></tr><tr><td><strong>switch</strong></td><td><strong>synchronized</strong></td><td><strong>this</strong></td><td><strong>throw</strong></td><td><strong>throws</strong></td></tr><tr><td><strong>transient</strong></td><td><strong>try</strong></td><td><strong>void</strong></td><td><strong>volatile</strong></td><td><strong>while</strong></td></tr></tbody></table><h3 id="2-2-第一个关键字class"><a href="#2-2-第一个关键字class" class="headerlink" title="2.2 第一个关键字class"></a>2.2 第一个关键字class</h3><p>​    表示定义一个类。创建一个类。</p><p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p><p>​    class后面跟随的就是这个类的名字，简称：类名。    </p><p>​    在类名后面会有一对大括号，表示这个类的内容。</p><p>举例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class HelloWorld&#123;       &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>解释：class表示定义类。</p><p>​    类名：HelloWorld</p><p>​    HelloWorld后面的大括号表示这个类的范围。</p><h2 id="3-字面量"><a href="#3-字面量" class="headerlink" title="3. 字面量"></a>3. 字面量</h2><p>作用：告诉程序员，数据在程序中的书写格式。</p><table><thead><tr><th><strong>字面量类型</strong></th><th><strong>说明</strong></th><th><strong>程序中的写法</strong></th></tr></thead><tbody><tr><td>整数</td><td>不带小数的数字</td><td>666，-88</td></tr><tr><td>小数</td><td>带小数的数字</td><td>13.14，-5.21</td></tr><tr><td>字符</td><td>必须使用单引号，有且仅能一个字符</td><td>‘A’，‘0’，   ‘我’</td></tr><tr><td>字符串</td><td>必须使用双引号，内容可有可无</td><td>“HelloWorld”，“黑马程序员”</td></tr><tr><td>布尔值</td><td>布尔值，表示真假，只有两个值：true，false</td><td>true 、false</td></tr><tr><td>空值</td><td>一个特殊的值，空值</td><td>值是：null</td></tr></tbody></table><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class Demo &#123;    public static void main(String[] args) &#123;        System.out.println(10); &#x2F;&#x2F; 输出一个整数        System.out.println(5.5); &#x2F;&#x2F; 输出一个小数        System.out.println(&#39;a&#39;); &#x2F;&#x2F; 输出一个字符        System.out.println(true); &#x2F;&#x2F; 输出boolean值true        System.out.println(&quot;欢迎来到黑马程序员&quot;); &#x2F;&#x2F; 输出字符串    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h3 id="区分技巧"><a href="#区分技巧" class="headerlink" title="区分技巧"></a>区分技巧</h3></blockquote><ol><li>不带小数点的数字都是整数类型的字面量。</li><li>只要带了小数点，那么就是小数类型的字面量。</li><li>只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。</li><li>字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。</li><li>字符类型的字面量只有两个值，true、false。</li><li>空类型的字面量只有一个值，null。</li></ol><h2 id="4-变量"><a href="#4-变量" class="headerlink" title="4. 变量"></a>4. 变量</h2><h3 id="4-1-什么是变量？"><a href="#4-1-什么是变量？" class="headerlink" title="4.1 什么是变量？"></a>4.1 什么是变量？</h3><p>​    变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。</p><h3 id="4-2-变量的定义格式"><a href="#4-2-变量的定义格式" class="headerlink" title="4.2 变量的定义格式"></a>4.2 变量的定义格式</h3><p>​    数据类型 变量名 = 数据值；</p><h4 id="4-2-1-格式详解"><a href="#4-2-1-格式详解" class="headerlink" title="4.2.1 格式详解"></a>4.2.1 格式详解</h4><p>​    数据类型：限定了变量当中能存储什么类型的数据。</p><p>​               如果要存10，那么数据类型就需要写整数类型。</p><p>​               如果要存10.0，那么数据类型就需要写小数类型。</p><p>​    变量名：其实就是这个容器的名字。</p><p>​            当以后想要使用变量里面的数据时，直接使用变量名就可以了。</p><p>​    数据值：真正存储在容器中的数据。</p><p>​    分号：表示语句的结束，就跟以前写作文时候的句号是一样的。</p><h4 id="4-2-2-常用的数据类型"><a href="#4-2-2-常用的数据类型" class="headerlink" title="4.2.2 常用的数据类型"></a>4.2.2 常用的数据类型</h4><p>​    整数：int</p><p>​    小数：（浮点数）double</p><p>​    其他数据类型稍后讲解</p><p>举例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class VariableDemo&#123; public static void main(String[] args)&#123;  &#x2F;&#x2F;定义一个整数类型的变量  &#x2F;&#x2F;数据类型 变量名 &#x3D; 数据值;  int a &#x3D; 16;  System.out.println(a);&#x2F;&#x2F;16    &#x2F;&#x2F;定义一个小数类型的变量  double b &#x3D; 10.1;  System.out.println(b);&#x2F;&#x2F;10.1 &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-3-变量的注意事项"><a href="#4-2-3-变量的注意事项" class="headerlink" title="4.2.3 变量的注意事项"></a>4.2.3 变量的注意事项</h4><ul><li>变量名不能重复</li><li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li><li>变量在使用之前必须要赋值。</li></ul><h2 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5. 数据类型"></a>5. 数据类型</h2><h3 id="5-1-Java语言数据类型的分类"><a href="#5-1-Java语言数据类型的分类" class="headerlink" title="5.1 Java语言数据类型的分类"></a>5.1 Java语言数据类型的分类</h3><ul><li>基本数据类型</li><li>引用数据类型（面向对象的时候再深入学习）</li></ul><h3 id="5-2-基本数据类型的四类八种"><a href="#5-2-基本数据类型的四类八种" class="headerlink" title="5.2 基本数据类型的四类八种"></a>5.2 基本数据类型的四类八种</h3><table><thead><tr><th align="center">数据类型</th><th align="center">关键字</th><th align="center">内存占用</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">整数</td><td align="center">byte</td><td align="center">1</td><td align="center">负的2的7次方 ~ 2的7次方-1(-128~127)</td></tr><tr><td align="center"></td><td align="center">short</td><td align="center">2</td><td align="center">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td></tr><tr><td align="center"></td><td align="center">int</td><td align="center">4</td><td align="center">负的2的31次方 ~ 2的31次方-1</td></tr><tr><td align="center"></td><td align="center">long</td><td align="center">8</td><td align="center">负的2的63次方 ~ 2的63次方-1</td></tr><tr><td align="center">浮点数</td><td align="center">float</td><td align="center">4</td><td align="center">1.401298e-45 ~ 3.402823e+38</td></tr><tr><td align="center"></td><td align="center">double</td><td align="center">8</td><td align="center">4.9000000e-324 ~ 1.797693e+308</td></tr><tr><td align="center">字符</td><td align="center">char</td><td align="center">2</td><td align="center">0-65535</td></tr><tr><td align="center">布尔</td><td align="center">boolean</td><td align="center">1</td><td align="center">true，false</td></tr></tbody></table><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>​    e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​    在java中整数默认是int类型，浮点数默认是double类型。</p><h4 id="需要记忆以下几点"><a href="#需要记忆以下几点" class="headerlink" title="需要记忆以下几点"></a>需要记忆以下几点</h4><p>byte类型的取值范围：</p><p>​    -128 ~ 127</p><p>int类型的大概取值范围：</p><p>​    -21亿多  ~ 21亿多</p><p>整数类型和小数类型的取值范围大小关系：</p><p>​    double &gt; float &gt; long &gt; int &gt; short &gt; byte</p><p>最为常用的数据类型选择：</p><ul><li><p>在定义变量的时候，要根据实际的情况来选择不同类型的变量。</p><p>比如：人的年龄，可以选择byte类型。</p><p>比如：地球的年龄，可以选择long类型。</p></li><li><p>如果整数类型中，不太确定范围，那么默认使用int类型。</p></li><li><p>如果小数类型中，不太确定范围，那么默认使用double类型。</p></li><li><p>如果要定义字符类型的变量，那么使用char</p></li><li><p>如果要定义布尔类型的变量，那么使用boolean</p></li></ul><h3 id="5-3-定义8种基本数据类型变量"><a href="#5-3-定义8种基本数据类型变量" class="headerlink" title="5.3 定义8种基本数据类型变量"></a>5.3 定义8种基本数据类型变量</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class VariableDemo3&#123;    public static void main(String[] args)&#123;        &#x2F;&#x2F;1.定义byte类型的变量        &#x2F;&#x2F;数据类型 变量名 &#x3D; 数据值;        byte a &#x3D; 10;        System.out.println(a);        &#x2F;&#x2F;2.定义short类型的变量        short b &#x3D; 20;        System.out.println(b);        &#x2F;&#x2F;3.定义int类型的变量        int c &#x3D; 30;        System.out.println(c);        &#x2F;&#x2F;4.定义long类型的变量        long d &#x3D; 123456789123456789L;        System.out.println(d);        &#x2F;&#x2F;5.定义float类型的变量        float e &#x3D; 10.1F;        System.out.println(e);        &#x2F;&#x2F;6.定义double类型的变量        double f &#x3D; 20.3;        System.out.println(f);        &#x2F;&#x2F;7.定义char类型的变量        char g &#x3D; &#39;a&#39;;        System.out.println(g);        &#x2F;&#x2F;8.定义boolean类型的变量        boolean h &#x3D; true;        System.out.println(h);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="注意点-1"><a href="#注意点-1" class="headerlink" title="注意点"></a><strong>注意点</strong></h4><ul><li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li><li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li><li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li><li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li></ul><h2 id="6-标识符"><a href="#6-标识符" class="headerlink" title="6. 标识符"></a>6. 标识符</h2><h3 id="6-1-硬性要求："><a href="#6-1-硬性要求：" class="headerlink" title="6.1 硬性要求："></a>6.1 硬性要求：</h3><p>​    必须要这么做，否则代码会报错。</p><ul><li>必须由数字、字母、下划线_、美元符号$组成。</li><li>数字不能开头</li><li>不能是关键字</li><li>区分大小写的。</li></ul><h3 id="6-2-软件建议："><a href="#6-2-软件建议：" class="headerlink" title="6.2 软件建议："></a>6.2 软件建议：</h3><p>​    如果不这么做，代码不会报错，但是会让代码显得比较low。</p><h3 id="6-2-1-小驼峰命名法"><a href="#6-2-1-小驼峰命名法" class="headerlink" title="6.2.1 小驼峰命名法"></a>6.2.1 小驼峰命名法</h3><p>适用于变量名和方法名</p><ul><li><p>如果是一个单词，那么全部小写，比如：name</p></li><li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p></li></ul><h3 id="6-2-2-大驼峰命名法"><a href="#6-2-2-大驼峰命名法" class="headerlink" title="6.2.2 大驼峰命名法"></a>6.2.2 大驼峰命名法</h3><p>适用于类名</p><ul><li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p></li><li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p></li></ul><p>不管起什么名字，都要做到见名知意。</p><h3 id="阿里巴巴命名规范细节："><a href="#阿里巴巴命名规范细节：" class="headerlink" title="阿里巴巴命名规范细节："></a>阿里巴巴命名规范细节：</h3><ol><li><p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p><p>正确：alibaba、hangzhou、nanjing</p><p>错误：jiage、dazhe</p></li><li><p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p><p>错误：_name</p><p>正确：name</p></li></ol><h2 id="7-IDEA"><a href="#7-IDEA" class="headerlink" title="7. IDEA"></a>7. IDEA</h2><h3 id="7-1-IDEA中层级结构介绍"><a href="#7-1-IDEA中层级结构介绍" class="headerlink" title="7.1 IDEA中层级结构介绍"></a>7.1 IDEA中层级结构介绍</h3><h4 id="7-1-1-结构分类"><a href="#7-1-1-结构分类" class="headerlink" title="7.1.1 结构分类"></a>7.1.1 结构分类</h4><ul><li>project（项目、工程）</li><li>module（模块）</li><li>package（包）</li><li>class（类）</li></ul><h4 id="7-1-2-结构介绍"><a href="#7-1-2-结构介绍" class="headerlink" title="7.1.2 结构介绍"></a>7.1.2 结构介绍</h4><p>​    为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。</p><h5 id="project（项目、工程）"><a href="#project（项目、工程）" class="headerlink" title="project（项目、工程）"></a>project（项目、工程）</h5><p>​    淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。</p><h5 id="module（模块）"><a href="#module（模块）" class="headerlink" title="module（模块）"></a>module（模块）</h5><p>​    在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：</p><ul><li>论坛模块</li><li>报名、咨询模块</li></ul><p>为了更好的管理代码，我们会把代码分别放在两个模块中存放。</p><h5 id="package（包）"><a href="#package（包）" class="headerlink" title="package（包）"></a>package（包）</h5><p>​    一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。</p><ul><li>发帖</li><li>评论</li></ul><p>​    为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。</p><h5 id="class（类）"><a href="#class（类）" class="headerlink" title="class（类）"></a>class（类）</h5><p>​    就是真正写代码的地方。</p><h4 id="7-1-3-小结"><a href="#7-1-3-小结" class="headerlink" title="7.1.3 小结"></a>7.1.3 小结</h4><ol><li><p>层级关系</p><p>​    project - module - package - class</p></li><li><p>包含数量</p><ul><li>project中可以创建多个module</li><li>module中可以创建多个package</li><li>package中可以创建多个class</li></ul></li></ol><h2 id="8-方法重载与方法重写"><a href="#8-方法重载与方法重写" class="headerlink" title="8. 方法重载与方法重写"></a>8. 方法重载与方法重写</h2><h3 id="8-1-方法重写"><a href="#8-1-方法重写" class="headerlink" title="8.1 方法重写"></a>8.1 方法重写</h3>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
